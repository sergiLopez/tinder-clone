[{"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\index.js":"1","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\App.js":"2","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Dashboard.js":"3","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Home.js":"4","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Onboarding.js":"5","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\Nav.js":"6","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\AuthModal.js":"7","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatContainer.js":"8","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatHeader.js":"9","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\MatchesDisplay.js":"10","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatDisplay.js":"11","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatInput.js":"12","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\Chat.js":"13"},{"size":469,"mtime":1658941636712,"results":"14","hashOfConfig":"15"},{"size":489,"mtime":1659020506773,"results":"16","hashOfConfig":"15"},{"size":2193,"mtime":1660686119063,"results":"17","hashOfConfig":"15"},{"size":994,"mtime":1660829454228,"results":"18","hashOfConfig":"15"},{"size":5948,"mtime":1660167276739,"results":"19","hashOfConfig":"15"},{"size":711,"mtime":1659994823321,"results":"20","hashOfConfig":"15"},{"size":2424,"mtime":1660937185838,"results":"21","hashOfConfig":"15"},{"size":522,"mtime":1660829508530,"results":"22","hashOfConfig":"15"},{"size":375,"mtime":1660829950475,"results":"23","hashOfConfig":"15"},{"size":162,"mtime":1660829986286,"results":"24","hashOfConfig":"15"},{"size":203,"mtime":1660830916325,"results":"25","hashOfConfig":"15"},{"size":377,"mtime":1660830880951,"results":"26","hashOfConfig":"15"},{"size":150,"mtime":1660832421271,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1zi1uo",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\index.js",[],[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\App.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Dashboard.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Home.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\pages\\Onboarding.js",["72"],[],"import React, { useState } from 'react'\r\nimport Nav from '../components/Nav'\r\n\r\n\r\nconst Onboarding = () => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    user_id: '',\r\n    first_name: '',\r\n    dob_day: '',\r\n    dob_month: '',\r\n    dob_year: '',\r\n    show_gender: false,\r\n    gender_identity: 'man',\r\n    gender_interest: 'woman',\r\n    email: '',\r\n    url: '',\r\n    about: '',\r\n    matches: []\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"submitted\")\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"submitted\")\r\n    const value = e.target.type ===  'checkbox' ? e.target.checked : e.target.value\r\n    const name = e.target.name\r\n\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name] : value\r\n    }))\r\n  \r\n\r\n  }\r\n\r\n  console.log(formData)\r\n\r\n  return (\r\n    <>\r\n      <Nav\r\n        minimal={true}\r\n        setShowModal={() => { }}\r\n        showModal={false}\r\n      />\r\n      <div className='onboarding'>\r\n        <h2>CREATE ACCOUNT</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <section>\r\n            <label htmlFor='first_name'>First Name</label>\r\n            <input\r\n              id=\"first_name\"\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              placeholder='first name'\r\n              required={true}\r\n              value={formData.first_name}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Birthday</label>\r\n            <div className='multiple-input-container'>\r\n              <input\r\n                id=\"dob_day\"\r\n                type=\"number\"\r\n                name=\"dob_day\"\r\n                placeholder='DD'\r\n                required={true}\r\n                value={formData.dob_day}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                id=\"dob_month\"\r\n                type=\"number\"\r\n                name=\"dob_month\"\r\n                placeholder='MM'\r\n                required={true}\r\n                value={formData.dob_month}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                id=\"dob_year\"\r\n                type=\"number\"\r\n                name=\"dob_year\"\r\n                placeholder='YYYY'\r\n                required={true}\r\n                value={formData.dob_year}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n\r\n            <label>Gender</label>\r\n            <div className='multiple-input-container'>\r\n              <input\r\n                id=\"man-gender-identity\"\r\n                type=\"radio\"\r\n                name=\"gender_identity\"\r\n\r\n                value={\"man\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_identity === 'man'}\r\n              />\r\n              <label htmlFor='man-gender-identity'>Man</label>\r\n              <input\r\n                id=\"woman-gender-identity\"\r\n                type=\"radio\"\r\n                name=\"gender_identity\"\r\n\r\n                value={\"woman\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_identity === 'woman'}\r\n              />\r\n              <label htmlFor='woman-gender-identity'>Woman</label>\r\n              <input\r\n                id=\"more-gender-identity\"\r\n                type=\"radio\"\r\n                name=\"gender_identity\"\r\n\r\n                value={\"more\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_identity === 'more'}\r\n              />\r\n              <label htmlFor='more-gender-identity'>More</label>\r\n            </div>\r\n\r\n            <label htmlFor='show-gender'>Show gender on my profile</label>\r\n            <input\r\n              id=\"show-gender\"\r\n              type=\"checkbox\"\r\n              name=\"show_gender\"\r\n              onChange={handleChange}\r\n              checked={formData.show_gender}\r\n            />\r\n            <label>Show me</label>\r\n            <div className='multiple-input-container'>\r\n              <input\r\n                id=\"man-gender-interest\"\r\n                type=\"radio\"\r\n                name=\"gender_interest\"\r\n\r\n                value={\"man\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_interest === 'man'}\r\n              />\r\n              <label htmlFor='man-gender-interest'>Man</label>\r\n              <input\r\n                id=\"woman-gender-interest\"\r\n                type=\"radio\"\r\n                name=\"gender_interest\"\r\n\r\n                value={\"woman\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_interest === 'woman'}\r\n              />\r\n              <label htmlFor='woman-gender-interest'>Woman</label>\r\n              <input\r\n                id=\"everyone-gender-interest\"\r\n                type=\"radio\"\r\n                name=\"gender_interest\"\r\n                value={\"everyone\"}\r\n                onChange={handleChange}\r\n                checked={formData.gender_interest === 'everyone'}\r\n              />\r\n              <label htmlFor='everyone-gender-interest'>Everyone</label>\r\n            </div>\r\n            <label htmlFor='about'>About me</label>\r\n            <input\r\n              id=\"about\"\r\n              type=\"text\"\r\n              name=\"about\"\r\n              required={true}\r\n              placeholder=\"I like long walks...\"\r\n              value={formData.about}\r\n              onChange={\"handleChange\"}\r\n            />\r\n            <input type=\"submit\" \r\n              value=\"Submit\"\r\n            />\r\n\r\n          </section>\r\n\r\n          <section>\r\n            <label htmlFor='url'>Profile Profile</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              name=\"url\"\r\n              required={true}\r\n              onChange={handleChange}\r\n\r\n            />\r\n            <div className='photo-container'>\r\n              <img src={formData.url}/>\r\n            </div>\r\n          </section>\r\n\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Onboarding","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\Nav.js",["73"],[],"import React from 'react'\r\nimport whitelogo from '../images/tinder_logo_white.png'\r\nimport colorLogo from '../images/color-logo-tinder.png'\r\n\r\nconst Nav = ({minimal, setShowModal, showModal, setIsSignUp}) => {\r\n\r\n    const handleClick = () => {\r\n        setShowModal(true)\r\n        setIsSignUp(false)\r\n    }\r\n\r\n    const authToken = false\r\n\r\n    return (<nav>\r\n        <div className='logo-container'>\r\n            <img className='logo' src={minimal ? colorLogo : whitelogo}></img>\r\n        </div> \r\n        {!authToken && !minimal && <button \r\n            className=\"nav-button\"\r\n            onClick={handleClick}\r\n            disabled={showModal}\r\n        >Log in</button>}\r\n    </nav>)\r\n}\r\nexport default Nav","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\AuthModal.js",["74","75"],[],"import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useCookies} from 'react-cookie'\r\n\r\nconst AuthModal = ({setShowModal, isSignUp}) => {\r\n\r\n  const [email, setEmail] = useState(null)\r\n  const [password, setPassword] = useState(null)\r\n  const [confirmPassword, setConfirmPassword] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [cookies, setCookie, removeCookie] = useCookies(['user'])\r\n\r\n  let navigate = useNavigate()\r\n\r\n \r\n\r\n  const handleClick = () => {\r\n     setShowModal(false)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try{\r\n      if( isSignUp && (password !== confirmPassword)){\r\n         setError(\"Password need to match\")\r\n         return \r\n      }\r\n      const response = await axios.post('http://localhost:8000/signup', {email, password})\r\n      \r\n      setCookie('Email', response.data.email)\r\n      setCookie('UserId', response.data.userId)\r\n      setCookie('AuthToken', response.data.token )\r\n\r\n      const success = response.status === 201\r\n\r\n      if(success) navigate ('/onboarding')\r\n\r\n    } catch(error){\r\n      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-modal\">\r\n        <div className=\"close-icon\" onClick={handleClick}>ⓧ</div>\r\n        <h2>{isSignUp ? 'CREATE ACCOUNT' : 'LOG IN'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"email\"\r\n              required={true}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n             <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              required={true}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {isSignUp && <input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              placeholder=\"confirm password\"\r\n              required={true}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />}\r\n            <input className=\"secondary-button\" type=\"submit\" value=\"Submit\" />\r\n            <p>{error}</p>\r\n\r\n        </form>\r\n        <hr/>\r\n        <h2>GET THE APP</h2>\r\n\r\n        AUTH MODAL\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthModal","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatContainer.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatHeader.js",["76"],[],"\r\n\r\nconst ChatHeader = () => {\r\n    return(\r\n        <div className=\"chat-container-header\">\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img src=\"\"/>\r\n                </div>\r\n                <h3>UserName</h3>\r\n\r\n            </div>\r\n            <i className=\"log-out-icon\">|---</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader","C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\MatchesDisplay.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatDisplay.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\ChatInput.js",[],[],"C:\\Users\\Sergio\\Desktop\\tinder-clone\\client\\src\\components\\Chat.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":195,"column":15,"nodeType":"79","endLine":195,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":16,"column":13,"nodeType":"79","endLine":16,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":12,"column":10,"nodeType":"82","messageId":"83","endLine":12,"endColumn":17},{"ruleId":"80","severity":1,"message":"84","line":12,"column":30,"nodeType":"82","messageId":"83","endLine":12,"endColumn":42},{"ruleId":"77","severity":1,"message":"78","line":8,"column":21,"nodeType":"79","endLine":8,"endColumn":34},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used."]